[versions]
# Android Gradle Plugin version
agp = "8.2.2"
# Android SDK versions
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
# Kotlin and related libraries
kotlin = "2.0.20-Beta2"
kotlinxSerialization = "1.7.2"
kotlinxCoroutine = "1.9.0-RC"
# Ktor libraries
ktor = "3.0.0-rc-1"
# Logging library
logback = "1.5.6"
# Stately concurrent collections for WASM and JS
statelyConcurrentCollectionsWasmJs = "2.0.7"
nexus-publish = "2.0.0"
dokka = "1.9.20"

[libraries]
# Kotlin libraries
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
kotlinx-coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutine" }
kotlinx-coroutine-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutine" }

# Ktor libraries
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
# Logging library
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Stately concurrent collections for WASM and JS
stately-concurrent-collections-wasm-js = { module = "co.touchlab:stately-concurrent-collections", version.ref = "statelyConcurrentCollectionsWasmJs" }

# Canard logging library
#canard = { module = "org.kodein.log:canard", version.ref = "canard" }
# Publishing
nexus-publish = { module = "io.github.gradle-nexus.publish-plugin:io.github.gradle-nexus.publish-plugin.gradle.plugin", version.ref = "nexus-publish" }
dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }

[bundles]
# Common bundles for kotlinx libraries
kotlinx-common = [
    "kotlinx-serialization-json",
    "kotlinx-coroutine"
]
# Ktor client bundles
ktor-client = [
    "ktor-client-logging",
    "ktor-client-core",
    "ktor-client-auth",
    "ktor-client-content-negotiation",
]
[plugins]
# Android application plugin
androidApplication = { id = "com.android.application", version.ref = "agp" }
# Android library plugin
androidLibrary = { id = "com.android.library", version.ref = "agp" }
## Jetbrains Compose plugin
#jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
# Compose compiler plugin
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
# Kotlin JVM plugin
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
# Ktor plugin
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
# Kotlin Multiplatform plugin
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
# Kotlin Serialization plugin
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }